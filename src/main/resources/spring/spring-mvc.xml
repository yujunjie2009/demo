<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd 
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd ">
	
	<mvc:resources location="/static/" mapping="/static/**"/>
	<mvc:resources location="/favicon.ico" mapping="/favicon.ico"/>
    <mvc:resources location="/error/" mapping="/error/**" />
	<mvc:resources mapping="/ueditor/**" location="/ueditor/" />
	
	<!-- <import resource="classpath*:spring/spring-views-admin.xml"/> -->
	<!-- <mvc:view-controller path="/admin/index.htm" view-name="/admin/views/index/index" /> -->
		
	<mvc:default-servlet-handler/>
	<!-- 启用AspectJ对Annotation的支持 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
	<!-- 启用定时任务注解 -->
	<task:annotation-driven />
	
	<!-- 只扫描@Controller注释的类 -->
	<context:component-scan base-package="com.newtiming.finance.controller" use-default-filters="false">
		<context:include-filter expression="org.springframework.stereotype.Controller" type="annotation" />
	</context:component-scan>

<!-- ********************************* 定时任务 begin *************************************** -->
	<!-- <task:scheduled-tasks> 
	  <task:scheduled ref="taskService" method="autoRemindTask" cron="0 0 9 * * ?" /> 
	  <task:scheduled ref="taskService" method="autoRemindTask" cron="* * * * * ?" /> 
	</task:scheduled-tasks>  -->
<!-- ********************************* 定时任务 end *************************************** -->


<!-- ********************************* freemarker 集成 begin *************************************** -->
	<!-- Freemarker配置 -->  
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">  
	    <!-- <property name="templateLoaderPath" value="/" />   -->
	    <property name="templateLoaderPaths">
	    	<list>
				<value>/views</value>
			</list>
	    </property>
	    <property name="freemarkerSettings">
	        <props>
	            <prop key="template_update_delay">0</prop>
	            <prop key="default_encoding">UTF-8</prop>
	            <prop key="number_format">0.##########</prop>
	            <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
	            <prop key="classic_compatible">true</prop>
	            <prop key="template_exception_handler">ignore</prop>
	            <prop key="object_wrapper">freemarker.ext.beans.BeansWrapper</prop>
	        </props>  
	    </property>
	</bean>

	<!--freemarker视图解释器 -->  
	<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">  
	    <property name="suffix" value=".ftl" />
	    <property name="contentType" value="text/html;charset=utf-8" />
	    <property name="exposeRequestAttributes" value="true" />
	    <property name="exposeSessionAttributes" value="true" />
	    <property name="exposeSpringMacroHelpers" value="true" />
	    <property name="requestContextAttribute" value="request" />
	</bean>
<!-- ********************************* freemarker 集成 end *************************************** -->


<!-- ********************************* json数据转换 begin *************************************** -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" >
				<!-- <property name="objectMapper" ref="notNullObjectMapper" /> -->
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=utf-8</value>
					</list>
			    </property>
			</bean>
			
		</mvc:message-converters>
		<!-- <mvc:argument-resolvers>
			<bean class="com.hexin.core.page.MultPageableArgumentResolver" />
		</mvc:argument-resolvers> -->
	</mvc:annotation-driven>
	
	
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" />
            </list>
        </property>
    </bean>
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
     <property name = "supportedMediaTypes">  
		  <list>  
		    <bean class="org.springframework.http.MediaType">  
		     <constructor-arg index="0" value="text"/>  
		     <constructor-arg index="1" value="plain"/>  
		     <constructor-arg index="2" value="UTF-8"/>  
		    </bean>  
		    <bean class="org.springframework.http.MediaType">  
		     <constructor-arg index="0" value="*"/>  
		     <constructor-arg index="1" value="*"/>  
		     <constructor-arg index="2" value="UTF-8"/>  
		    </bean>  
		    <bean class="org.springframework.http.MediaType">  
		     <constructor-arg index="0" value="text"/>  
		     <constructor-arg index="1" value="*"/>  
		     <constructor-arg index="2" value="UTF-8"/>  
		    </bean>  
		     <bean class="org.springframework.http.MediaType">  
		     <constructor-arg index="0" value="application"/>  
		     <constructor-arg index="1" value="json"/>  
		     <constructor-arg index="2" value="UTF-8"/>  
		    </bean>  
		  </list>  
	</property>
</bean>
<!-- ********************************* json数据转换 end ***************************************************** -->



<!-- ********************************* controller参数校验拦截器 begin *************************************** -->
    <!-- 接口校验拦截器 -->
    <!-- <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**/*"/>
            <mvc:exclude-mapping path="/login.htm"/>
            <bean class="com.newtiming.finance.interceptor.ControllerInterceptor">
            	<property name="myparam" value=""></property>
            </bean>
        </mvc:interceptor>
    </mvc:interceptors> -->
<!-- ********************************* controller参数校验拦截器 end *************************************** -->



<!-- ********************************* AOP异常拦截处理 begin *************************************** -->
	<bean id="aspect" class="com.common.aop.SimpleBusinessExceptionAspect"/>
	<aop:config>
	    <aop:pointcut id="pointcut" expression="execution(public * com.newtiming.finance.controller.*.*(..)) || execution(public * com.newtiming.finance.controller.*.*.*(..))"/>
	    <aop:aspect ref="aspect" order="2">
	        <aop:around method="doAround" pointcut-ref="pointcut"/>
	    </aop:aspect>
	</aop:config>
<!-- ********************************* AOP异常拦截处理 end *************************************** -->
<!-- <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
    定义默认的异常处理页面，当该异常类型的注册时使用  
    <property name="defaultErrorView" value="error"></property>  
    定义异常处理页面用来获取异常信息的变量名，默认名为exception  
    <property name="exceptionAttribute" value="ex"></property>  
    定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值  
    <property name="exceptionMappings">  
        <props>  
            <prop key="com.newtiming.core.exception.BusinessException">error/error</prop>
            <prop key="cn.basttg.core.exception.ParameterException">error-parameter</prop>
            这里还可以继续扩展对不同异常类型的处理
        </props>  
    </property>  
</bean>  -->


<!-- ********************************* springmvc统一异常处理begin *************************************** -->
   <!-- 统一异常处理类 -->
<!--    <bean id="handlerExceptionResolver" class="com.newtiming.core.exception.ControllerExceptionResolver">
      <property name="mappingJackson2HttpMessageConverter" ref="mappingJackson2HttpMessageConverter" />
   </bean> -->
<!-- ********************************* springmvc统一异常处理end *************************************** -->
   


    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="urlMap">
            <map>
                <entry key="/error/**" value="errorResourceHandler" />
            </map>
        </property>
        <property name="order" value="100000" />
    </bean>
    
    <bean id="errorResourceHandler" class="org.springframework.web.servlet.resource.ResourceHttpRequestHandler">
        <property name="locations" value="/error/" />
        <property name="supportedMethods">
            <list>
                <value>GET</value>
                <value>HEAD</value>
                <value>POST</value>
            </list>
        </property>
    </bean>
    
    <!-- 上传文件拦截，设置最大上传文件大小   10M=10*1024*1024(B)=10485760 bytes -->  
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
	    <property name="maxUploadSize" value="10485760000000000" />  
	</bean>
</beans>
